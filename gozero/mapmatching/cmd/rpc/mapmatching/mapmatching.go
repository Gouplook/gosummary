// Code generated by goctl. DO NOT EDIT!
// Source: mapmatching.proto

package mapmatching

import (
	"context"

	"gosummary/gozero/mapmatching/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CarLocation    = pb.CarLocation
	CarProjPoint   = pb.CarProjPoint
	MapMatchReq    = pb.MapMatchReq
	MapMatchResult = pb.MapMatchResult

	MapMatching interface {
		MapMatch(ctx context.Context, in *MapMatchReq, opts ...grpc.CallOption) (*MapMatchResult, error)
	}

	defaultMapMatching struct {
		cli zrpc.Client
	}
)

func NewMapMatching(cli zrpc.Client) MapMatching {
	return &defaultMapMatching{
		cli: cli,
	}
}

func (m *defaultMapMatching) MapMatch(ctx context.Context, in *MapMatchReq, opts ...grpc.CallOption) (*MapMatchResult, error) {
	client := pb.NewMapMatchingClient(m.cli.Conn())
	return client.MapMatch(ctx, in, opts...)
}
